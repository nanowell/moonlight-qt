name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            qt_dir: C:\Qt\5.15
          - os: macos-latest
            build_target: macos
          - os: ubuntu-latest
            build_target: steamlink
          - os: ubuntu-latest
            build_target: linux
            ffmpeg_configure_args: --enable-pic --disable-static --enable-shared --disable-all --enable-avcodec --enable-decoder=h264 --enable-decoder=hevc --enable-decoder=av1 --enable-nvdec --enable-hwaccel=h264_nvdec --enable-hwaccel=hevc_nvdec --enable-hwaccel=av1_nvdec --enable-hwaccel=h264_vaapi --enable-hwaccel=hevc_vaapi --enable-hwaccel=av1_vaapi --enable-hwaccel=h264_vdpau --enable-hwaccel=hevc_vdpau --enable-hwaccel=av1_vdpau --enable-libdav1d --enable-decoder=libdav1d

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set up environment (Windows)
      if: runner.os == 'Windows'
      run: |
        echo "QTDIR=${{ matrix.qt_dir }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "VERSION=$(cat app/version.txt)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Set up environment (macOS)
      if: runner.os == 'macOS'
      run: |
        echo "BUILD_TARGET=${{ matrix.build_target }}" >> $GITHUB_ENV
        echo "VERSION=$(cat app/version.txt)" >> $GITHUB_ENV

    - name: Set up environment (Linux)
      if: runner.os == 'Linux'
      run: |
        echo "BUILD_TARGET=${{ matrix.build_target }}" >> $GITHUB_ENV
        echo "FFMPEG_CONFIGURE_ARGS=${{ matrix.ffmpeg_configure_args }}" >> $GITHUB_ENV
        echo "VERSION=$(cat app/version.txt)" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential qt5-default

    - name: Configure
      run: |
        qmake -project
        qmake

    - name: Build
      run: make

    - name: Test
      run: make test

    - name: Install
      run: sudo make install

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        # Artifact name
        name: Artifact
